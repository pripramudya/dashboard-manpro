db.proyek$TG_MULAI <- format(as.Date(db.proyek$TG_MULAI), "%d-%b-%y")
# Membuat ringkasan status proyek
status.proyek <- db.proyek %>%
group_by(NO_PROYEK) %>%
summarise(real = mean(REAL), plan = mean(PLAN),
nilai = sum(NILAI), ny.bast = sum(NILAI[STATUS != "BAST-1"]),
lokasi = n(), lokasi.og = length(NO_PROYEK[STATUS != "BAST-1"]),
lokasi.lag = length(NO_PROYEK[REAL < PLAN]),
kota = n_distinct(NM_KOTA),
area = paste(sort(unique(AREA)), collapse = ", "),
loc.pre = length(NO_PROYEK[STATUS == "PREPARING"]),
loc.del = length(NO_PROYEK[STATUS == "DELIVERY"]),
loc.ins = length(NO_PROYEK[STATUS == "INSTALLASI"]),
loc.tc  = length(NO_PROYEK[STATUS == "TEST COMM"]),
loc.ut  = length(NO_PROYEK[STATUS == "UJI TERIMA"]),
loc.bas = length(NO_PROYEK[STATUS == "BAST-1"])
) %>%
arrange(real)
proyek <- db.proyek %>%
distinct(NO_PROYEK, .keep_all = TRUE) %>%
select(NO_PROYEK, NM_JENIS, NM_PROYEK, NM_MITRA, GRUP, TG_MULAI, TG_AKHIR, real = REAL)
#Limit project name character to 50 words only
#proyek$NM_PROYEK <- substr(proyek$NM_PROYEK, 1, 45)
# Monitoring project based on progress
status.proyek <-
status.proyek %>%
mutate(no.proyek = substr(NO_PROYEK, 4, regexpr("/", NO_PROYEK)-1),
jadwal = if_else(real - plan >= 0, "MediumSeaGreen",
if_else(real - plan >= -10, "goldenrod", "crimson"
))
)
# Membuat daftar proyek
proyek <- left_join(proyek, status.proyek, by = "NO_PROYEK")
# Menandai proyek telat
proyek <- proyek %>% mutate(telat = if_else(as.Date(TG_AKHIR) < Sys.Date(), "*", ""))
# Mengubah format tanggal akhir
proyek$TG_AKHIR <- format(as.Date(proyek$TG_AKHIR), "%d-%b-%y")
# Mengubah tipe variabel nama mitra
proyek$NM_MITRA <- as.character(proyek$NM_MITRA)
# Membuat daftar proyek ongoing
ongoing <- proyek %>%
filter(real < 100)
rm(list = ls())
# Membaca file daftar_proyek.xlsx
db.proyek <- read.xlsx("data/daftar_proyek.xlsx")
# Membuat kolom prioritas proyek
db.proyek <-
db.proyek %>%
mutate(GRUP = ifelse(NO_PROYEK %in% c("KT-6632/2019",
"KT-3259/2019",
"KT-3703/3017",
"KT-2155/3518"),
"PRIORITAS 1", "PRIORITAS 2")
)
# Membuat kolom Lag dan Lead
db.proyek <- db.proyek %>%
mutate(JADWAL = if_else(PLAN > REAL, "Lag", "Lead"))
# Mengubah format tanggal mulai dan akhir proyek
db.proyek$TG_MULAI <- substr(db.proyek$TG_MULAI, 1, 10)
db.proyek$TG_AKHIR <- substr(db.proyek$TG_AKHIR, 1, 10)
db.proyek$TG_MULAI <- format(as.Date(db.proyek$TG_MULAI), "%d-%b-%y")
# Membuat ringkasan status proyek
status.proyek <- db.proyek %>%
group_by(NO_PROYEK) %>%
summarise(real = mean(REAL), plan = mean(PLAN),
nilai = sum(NILAI), ny.bast = sum(NILAI[STATUS != "BAST-1"]),
lokasi = n(), lokasi.og = length(NO_PROYEK[STATUS != "BAST-1"]),
lokasi.lag = length(NO_PROYEK[REAL < PLAN]),
kota = n_distinct(NM_KOTA),
area = paste(sort(unique(AREA)), collapse = ", "),
loc.pre = length(NO_PROYEK[STATUS == "PREPARING"]),
loc.del = length(NO_PROYEK[STATUS == "DELIVERY"]),
loc.ins = length(NO_PROYEK[STATUS == "INSTALLASI"]),
loc.tc  = length(NO_PROYEK[STATUS == "TEST COMM"]),
loc.ut  = length(NO_PROYEK[STATUS == "UJI TERIMA"]),
loc.bas = length(NO_PROYEK[STATUS == "BAST-1"])
) %>%
arrange(real)
proyek <- db.proyek %>%
distinct(NO_PROYEK, .keep_all = TRUE) %>%
select(NO_PROYEK, NM_JENIS, NM_PROYEK, NM_MITRA, GRUP, TG_MULAI, TG_AKHIR, REAL)
View(proyek)
status.proyek <-
status.proyek %>%
mutate(no.proyek = substr(NO_PROYEK, 4, regexpr("/", NO_PROYEK)-1),
jadwal = if_else(real - plan >= 0, "MediumSeaGreen",
if_else(real - plan >= -10, "goldenrod", "crimson"
))
)
# Membuat daftar proyek
proyek <- left_join(proyek, status.proyek, by = "NO_PROYEK")
# Menandai proyek telat
proyek <- proyek %>% mutate(telat = if_else(as.Date(TG_AKHIR) < Sys.Date(), "*", ""))
# Mengubah format tanggal akhir
proyek$TG_AKHIR <- format(as.Date(proyek$TG_AKHIR), "%d-%b-%y")
# Mengubah tipe variabel nama mitra
proyek$NM_MITRA <- as.character(proyek$NM_MITRA)
# Membuat daftar proyek ongoing
ongoing <- proyek %>%
filter(real < 100)
View(ongoing)
View(ongoing)
# Total nilai belum BAST
lokasi.blmbast <- db.proyek %>% filter(STATUS  != "BAST-1")
blmbast <- sum(lokasi.blmbast$NILAI)
# Jumlah proyek lag
proyek.lag <- length(ongoing$NO_PROYEK[ongoing$real < ongoing$plan])
proyek.telat <- length(ongoing$NO_PROYEK[ongoing$telat == "*"])
lokasi.lag <- length(lokasi.blmbast$NM_LOKASI[lokasi.blmbast$REAL < lokasi.blmbast$PLAN])
lokasi.lag <- formatC(lokasi.lag, big.mark = ".",
decimal.mark = ",", format = "f", drop0trailing = TRUE)
# Membagi proyek berdasarkan grup prioritas
prioritas.1 <- ongoing %>% filter(GRUP == "PRIORITAS 1") %>% arrange(real)
prioritas.2 <- ongoing %>% filter(GRUP == "PRIORITAS 2") %>% arrange(real)
# Detail location data frame
lokasi.rinci <- db.proyek %>%
select(AREA, NM_KOTA, NM_LOKASI, NILAI, PLAN, REAL, JADWAL, STATUS, NO_PROYEK)
lokasi.rinci$NILAI <- formatC(
lokasi.rinci$NILAI, big.mark = ".", decimal.mark = ",",
format = "f", drop0trailing = TRUE)
# Mengubah nama kolom
colnames(lokasi.rinci)[2] <- "Kota"
colnames(lokasi.rinci)[3] <- "Lokasi"
colnames(lokasi.rinci)[1] <- "Area"
colnames(lokasi.rinci)[4] <- "Nilai"
colnames(lokasi.rinci)[5] <- "Plan (%)"
colnames(lokasi.rinci)[6] <- "Real (%)"
colnames(lokasi.rinci)[7] <- "Jadwal"
colnames(lokasi.rinci)[8] <- "Status"
# Ikon deviasi
ikon <- if_else(mean(ongoing$real) >= mean(ongoing$plan), "plus", "minus")
# Mengubah format deviasi proyek
deviasi <- abs(mean(ongoing$real) - mean(ongoing$plan))
deviasi <- paste0(formatC(deviasi, big.mark = ".",
decimal.mark = ",", format = "f", digits = 2), "%")
View(prioritas.2)
rm(list = ls())
library(shinydashboard)
library(openxlsx)
library(tidyverse)
# Membaca file daftar_proyek.xlsx
db.proyek <- read.xlsx("data/daftar_proyek.xlsx")
# Membuat kolom prioritas proyek
db.proyek <-
db.proyek %>%
mutate(GRUP = ifelse(NO_PROYEK %in% c("KT-6632/2019",
"KT-3259/2019",
"KT-3703/3017",
"KT-2155/3518"),
"PRIORITAS 1", "PRIORITAS 2")
)
# Membuat kolom Lag dan Lead
db.proyek <- db.proyek %>%
mutate(JADWAL = if_else(PLAN > REAL, "Lag", "Lead"))
# Mengubah format tanggal mulai dan akhir proyek
db.proyek$TG_MULAI <- substr(db.proyek$TG_MULAI, 1, 10)
db.proyek$TG_AKHIR <- substr(db.proyek$TG_AKHIR, 1, 10)
db.proyek$TG_MULAI <- format(as.Date(db.proyek$TG_MULAI), "%d-%b-%y")
# Membuat ringkasan status proyek
status.proyek <- db.proyek %>%
group_by(NO_PROYEK) %>%
summarise(progres = mean(REAL), rencana = mean(PLAN),
nilai = sum(NILAI), blm.bast = sum(NILAI[STATUS != "BAST-1"]),
lokasi = n(), lokasi.og = length(NO_PROYEK[STATUS != "BAST-1"]),
lokasi.lag = length(NO_PROYEK[REAL < PLAN]),
kota = n_distinct(NM_KOTA),
area = paste(sort(unique(AREA)), collapse = ", "),
loc.pre = length(NO_PROYEK[STATUS == "PREPARING"]),
loc.del = length(NO_PROYEK[STATUS == "DELIVERY"]),
loc.ins = length(NO_PROYEK[STATUS == "INSTALLASI"]),
loc.tc  = length(NO_PROYEK[STATUS == "TEST COMM"]),
loc.ut  = length(NO_PROYEK[STATUS == "UJI TERIMA"]),
loc.bas = length(NO_PROYEK[STATUS == "BAST-1"])
) %>%
arrange(progres)
proyek <- db.proyek %>%
distinct(NO_PROYEK, .keep_all = TRUE) %>%
select(NO_PROYEK, NM_JENIS, NM_PROYEK, NM_MITRA, GRUP, TG_MULAI, TG_AKHIR, REAL)
#Limit project name character to 50 words only
#proyek$NM_PROYEK <- substr(proyek$NM_PROYEK, 1, 45)
# Monitoring project based on progress
status.proyek <-
status.proyek %>%
mutate(no.proyek = substr(NO_PROYEK, 4, regexpr("/", NO_PROYEK)-1),
jadwal = if_else(progres - rencana >= 0, "MediumSeaGreen",
if_else(progres - rencana >= -10, "goldenrod", "crimson"
))
)
# Membuat daftar proyek
proyek <- left_join(proyek, status.proyek, by = "NO_PROYEK")
# Menandai proyek telat
proyek <- proyek %>% mutate(telat = if_else(as.Date(TG_AKHIR) < Sys.Date(), "*", ""))
# Mengubah format tanggal akhir
proyek$TG_AKHIR <- format(as.Date(proyek$TG_AKHIR), "%d-%b-%y")
# Mengubah tipe variabel nama mitra
proyek$NM_MITRA <- as.character(proyek$NM_MITRA)
# Membuat daftar proyek ongoing
ongoing <- proyek %>%
filter(progres < 100)
# Total nilai belum BAST
lokasi.blmbast <- db.proyek %>% filter(STATUS  != "BAST-1")
blmbast <- sum(lokasi.blmbast$NILAI)
# Jumlah proyek lag
proyek.lag <- length(ongoing$NO_PROYEK[ongoing$progres < ongoing$rencana])
proyek.telat <- length(ongoing$NO_PROYEK[ongoing$telat == "*"])
lokasi.lag <- length(lokasi.blmbast$NM_LOKASI[lokasi.blmbast$REAL < lokasi.blmbast$PLAN])
lokasi.lag <- formatC(lokasi.lag, big.mark = ".",
decimal.mark = ",", format = "f", drop0trailing = TRUE)
# Membagi proyek berdasarkan grup prioritas
prioritas.1 <- ongoing %>% filter(GRUP == "PRIORITAS 1") %>% arrange(progres)
prioritas.2 <- ongoing %>% filter(GRUP == "PRIORITAS 2") %>% arrange(progres)
# Detail location data frame
lokasi.rinci <- db.proyek %>%
select(AREA, NM_KOTA, NM_LOKASI, NILAI, PLAN, REAL, JADWAL, STATUS, NO_PROYEK)
lokasi.rinci$NILAI <- formatC(
lokasi.rinci$NILAI, big.mark = ".", decimal.mark = ",",
format = "f", drop0trailing = TRUE)
# Mengubah nama kolom
colnames(lokasi.rinci)[2] <- "Kota"
colnames(lokasi.rinci)[3] <- "Lokasi"
colnames(lokasi.rinci)[1] <- "Area"
colnames(lokasi.rinci)[4] <- "Nilai"
colnames(lokasi.rinci)[5] <- "Plan (%)"
colnames(lokasi.rinci)[6] <- "Real (%)"
colnames(lokasi.rinci)[7] <- "Jadwal"
colnames(lokasi.rinci)[8] <- "Status"
# Ikon deviasi
ikon <- if_else(mean(ongoing$progres) >= mean(ongoing$rencana), "plus", "minus")
# Mengubah format deviasi proyek
deviasi <- abs(mean(ongoing$progres) - mean(ongoing$rencana))
deviasi <- paste0(formatC(deviasi, big.mark = ".",
decimal.mark = ",", format = "f", digits = 2), "%")
View(prioritas.1)
View(lokasi.blmbast)
View(lokasi.blmbast)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?bsModal
runApp()
runApp()
rm(list = ls())
runApp()
shiny::runApp()
View(prioritas.1)
shiny::runApp()
View(prioritas.1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list = ls())
runApp()
runApp()
plot(cars)
packageVersion('rmarkdown')
rmarkdown::pandoc_version()
install.packages("officer")
library(officer)
library(openxlsx)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
packageVersion('rmarkdown')
rmarkdown::pandoc_version()
rmarkdown::pandoc_version()
rmarkdown::pandoc_version()
update.packages(rmarkdown)
update.packages("rmarkdown")
packageVersion('rmarkdown')
plot(cars)
shiny::runApp()
runApp()
install.packages("shinydashboard")
install.packages("shinydashboard")
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
View(db.proyek)
View(ongoing)
View(status.proyek)
?tabItems
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?fluidRow
runApp()
runApp()
?column
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(proyek)
runApp()
runApp()
View(proyek)
proyek[1:8]
proyek[1:7, 9, 10]
proyek[c(1:7, 9, 10)]
runApp()
runApp()
?radioButtons()
runApp()
runApp()
?switch
?reactive
?observe
?reactive
knitr::opts_chunk$set(echo = TRUE)
summary(proyek)
summary(proyek)
runApp()
runApp()
runApp()
summary(cars)
summary(proyek)
shiny::runApp()
# Membaca file daftar_proyek.xlsx
db.proyek <- read.xlsx("data/daftar_proyek.xlsx")
library(tidyverse)
library(openxlsx)
# Membaca file daftar_proyek.xlsx
db.proyek <- read.xlsx("data/daftar_proyek.xlsx")
library(tidyverse)
library(openxlsx)
# Membaca file daftar_proyek.xlsx
daftar.proyek <- read.xlsx("data/daftar_proyek.xlsx")
print(blmbast)
View(prioritas.1)
blmbast
toString(blmbast)
shiny::runApp()
length(ongoing$NO_PROYEK) %>% as.character()
format(Sys.Date(), "%d-%b-%y")
Sys.Date()
?Sys.Date()
?format
?Sys.Date()
View(proyek)
View(ongoing)
runApp()
runApp()
ongoing$NO_PROYEK[ongoing$telat == "*"]
runApp()
View(ongoing)
?kable
knitr::kable(proyek[c(1, 3, 4)],format = "rst", pad=0)
knitr::kable(proyek[c(1, 3, 4)],format = "latex", pad=0)
knitr::kable(proyek[c(1, 3, 4)],format = "latex")
knitr::kable(proyek[c(1, 3, 4)],format = "latex")
knitr::kable(proyek[c(1, 3, 4)],format = "rst")
knitr::kable(proyek[c(1, 4, 6, 7)])
proyek %>%
ggplot(aes(x = no.proyek, y = progres)) + geom_bar(stat = "identity")
proyek %>%
arrange(progres)
ggplot(aes(x = no.proyek, y = progres)) + geom_bar(stat = "identity")
proyek %>%
arrange(progres) %>%
ggplot(aes(x = no.proyek, y = progres)) + geom_bar(stat = "identity")
proyek %>%
arrange(-progres) %>%
ggplot(aes(x = no.proyek, y = progres)) + geom_bar(stat = "identity")
proyek %>%
ggplot(aes(x = reorder(no.proyek, progres), y = progres)) + geom_bar(stat = "identity")
proyek %>%
ggplot(aes(x = reorder(no.proyek, progres), y = progres)) +
geom_bar(stat = "identity", fill = "dark red")
proyek %>%
ggplot(aes(x = reorder(no.proyek, progres), y = progres)) +
geom_bar(stat = "identity", fill = "dark red") +
coord_flip()
proyek %>%
ggplot(aes(x = reorder(no.proyek, progres), y = progres)) +
geom_bar(stat = "identity", fill = "dark red") +
coord_flip() +
labs(x = "Progres (%)")
proyek %>%
ggplot(aes(x = reorder(no.proyek, progres), y = progres)) +
geom_bar(stat = "identity", fill = "dark red") +
coord_flip() +
labs(x = "Nomor Proyek", y = "Progres (%)")
proyek %>%
ggplot(aes(x = reorder(no.proyek, progres), y = progres)) +
geom_bar(stat = "identity", fill = "dark red") +
coord_flip() +
labs(x = "Nomor Proyek", y = "Progres (%)")
library(tidyverse)
# Membaca file objek global
load(".RData")
total <- length(proyek$NO_PROYEK) %>% as.character()
total.1 <- length(prioritas.1$no.proyek) %>% as.character()
total.2 <- length(prioritas.2$no.proyek) %>% as.character()
berjalan <- length(ongoing$NO_PROYEK) %>% as.character()
total.lokasi <- length(lokasi.blmbast$NM_LOKASI)
progres.berjalan <- paste0(formatC(mean(ongoing$progres), big.mark = ".",
decimal.mark = ",", format = "f", digits = 2), "%")
nilai.berjalan <- paste0(formatC(blmbast/1000000000, big.mark = ".",
decimal.mark = ",", format = "f", digits = 2), " milyar Rupiah")
proyek.habis <- ongoing$NO_PROYEK[ongoing$telat == "*"]
proyek.awas <- ongoing$NO_PROYEK[ongoing$jadwal == "crimson"]
proyek.siaga <- ongoing$NO_PROYEK[ongoing$jadwal == "goldenrod"]
rm(list = ls())
runApp()
runApp()
rm(list = ls())
runApp()
ls()
list()
runApp()
?save()
?save.image()
runApp()
?load()
runApp()
runApp()
rm(list = ls())
runApp()
library(magrittr)
# Membaca file objek global
load("all.rda")
library(magrittr)
# Membaca file objek global
load("all.rda")
rm(list = ls())
runApp()
library(magrittr)
# Membaca file objek global
load("proyek.RData")
rm(list = ls())
runApp()
rm(list = ls())
library(magrittr)
# Membaca file objek global
load("proyek.RData")
total <- length(proyek$NO_PROYEK) %>% as.character()
total.1 <- length(prioritas.1$no.proyek) %>% as.character()
total.2 <- length(prioritas.2$no.proyek) %>% as.character()
berjalan <- length(ongoing$NO_PROYEK) %>% as.character()
total.lokasi <- length(lokasi.blmbast$NM_LOKASI)
progres.berjalan <- paste0(formatC(mean(ongoing$progres), big.mark = ".",
decimal.mark = ",", format = "f", digits = 2), "%")
nilai.berjalan <- paste0(formatC(blmbast/1000000000, big.mark = ".",
decimal.mark = ",", format = "f", digits = 2), " milyar Rupiah")
proyek.habis <- ongoing$NO_PROYEK[ongoing$telat == "*"]
proyek.awas <- ongoing$NO_PROYEK[ongoing$jadwal == "crimson"]
proyek.siaga <- ongoing$NO_PROYEK[ongoing$jadwal == "goldenrod"]
proyek$NO_PROYEK[proyek$GRUP == "PRIORITAS 1"]
length(proyek$NO_PROYEK[proyek$GRUP == "PRIORITAS 1"])
View(proyek)
sum(proyek$lokasi.og)
paste0(formatC(sum(proyek$blm.bast/1000000000, big.mark = ".",
decimal.mark = ",", format = "f", digits = 2), " milyar Rupiah")
paste0(formatC(sum(proyek$blm.bast)/1000000000, big.mark = ".",
decimal.mark = ",", format = "f", digits = 2), " milyar Rupiah")
runApp()
rm(list = ls())
runApp()
file.path()
file.path(tempdir())
getwd()
getwd()
file.path(tempdir(), paste0(format.laporan(), ".Rmd"))
file.path(tempdir(), paste0("pdf", ".Rmd"))
?downloadHandler
?file.copy
rm(list = ls())
runApp()
runApp()
runApp()
runApp()
rm(list = ls())
runApp()
rm(list = ls())
runApp()
rm(list = ls())
blogdown:::serve_site()
